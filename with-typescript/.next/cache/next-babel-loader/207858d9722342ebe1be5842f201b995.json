{"ast":null,"code":"var _jsxFileName = \"/Users/apple/lesson/hello-next/with-typescript/pages/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Fragment } from \"react\";\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\nimport LaunchItem from \"../components/LaunchItem\";\nimport MissionKey from \"../components/MissionKey\"; // import App from \"../components/App\";\n\nconst LAUNCHES_QUERY = gql`\n  query LaunchesQuery {\n    launches {\n      flight_number\n      mission_name\n      launch_date_local\n      launch_success\n    }\n  }\n`;\n\nconst Index = () => {\n  return __jsx(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    className: \"display-4 my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, \"Launches\"), __jsx(MissionKey, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }), __jsx(Query, {\n    query: LAUNCHES_QUERY,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, ({\n    loading,\n    error,\n    data\n  }) => {\n    if (loading) return __jsx(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 31\n      }\n    }, \"Loading...\");\n    if (error) console.log(error);\n    return __jsx(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, data.launches.map(launch => {\n      return __jsx(LaunchItem, {\n        key: launch.flight_number,\n        launch: launch,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 19\n        }\n      });\n    }));\n  }));\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/apple/lesson/hello-next/with-typescript/pages/index.tsx"],"names":["Fragment","gql","Query","LaunchItem","MissionKey","LAUNCHES_QUERY","Index","loading","error","data","console","log","launches","map","launch","flight_number"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,UAAP,MAAuB,0BAAvB,C,CACA;;AAEA,MAAMC,cAAc,GAAGJ,GAAI;;;;;;;;;CAA3B;;AAWA,MAAMK,KAAe,GAAG,MAAM;AAC5B,SACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,MAAC,KAAD;AAAO,IAAA,KAAK,EAAED,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAEE,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,GAAD,KAAmC;AAClC,QAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACb,QAAIC,KAAJ,EAAWE,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACX,WACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,IAAI,CAACG,QAAL,CAAcC,GAAd,CAAmBC,MAAD,IAAiB;AAClC,aACE,MAAC,UAAD;AAAY,QAAA,GAAG,EAAEA,MAAM,CAACC,aAAxB;AAAuC,QAAA,MAAM,EAAED,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD,KAJA,CADH,CADF;AASD,GAbH,CAHF,CADF;AAqBD,CAtBD;;AAwBA,eAAeR,KAAf","sourcesContent":["import { Fragment } from \"react\";\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\nimport LaunchItem from \"../components/LaunchItem\";\nimport MissionKey from \"../components/MissionKey\";\n// import App from \"../components/App\";\n\nconst LAUNCHES_QUERY = gql`\n  query LaunchesQuery {\n    launches {\n      flight_number\n      mission_name\n      launch_date_local\n      launch_success\n    }\n  }\n`;\n\nconst Index: React.FC = () => {\n  return (\n    <Fragment>\n      <h1 className=\"display-4 my-3\">Launches</h1>\n      <MissionKey />\n      <Query query={LAUNCHES_QUERY}>\n        {({ loading, error, data }: any) => {\n          if (loading) return <h4>Loading...</h4>;\n          if (error) console.log(error);\n          return (\n            <Fragment>\n              {data.launches.map((launch: any) => {\n                return (\n                  <LaunchItem key={launch.flight_number} launch={launch} />\n                );\n              })}\n            </Fragment>\n          );\n        }}\n      </Query>\n    </Fragment>\n  );\n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}