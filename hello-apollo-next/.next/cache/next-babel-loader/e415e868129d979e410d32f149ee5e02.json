{"ast":null,"code":"var _jsxFileName = \"/Users/apple/lesson/hello-next/hello-apollo-next/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/*\n * @Author: hhhhhq\n * @Date: 2020-06-26 22:41:58\n * @LastEditors: hhhhhq\n * @LastEditTime: 2020-06-27 15:40:41\n * @Description: file content\n */\nimport { Fragment } from 'react';\nimport { Query } from 'react-apollo';\nimport LaunchItem from '../components/LaunchItem';\nimport MissionKey from '../components/MissionKey';\nconst LAUNCHES_QUERY = {\n  \"kind\": \"Document\",\n  \"definitions\": [{\n    \"kind\": \"OperationDefinition\",\n    \"operation\": \"query\",\n    \"name\": {\n      \"kind\": \"Name\",\n      \"value\": \"LaunchesQuery\"\n    },\n    \"variableDefinitions\": [],\n    \"directives\": [],\n    \"selectionSet\": {\n      \"kind\": \"SelectionSet\",\n      \"selections\": [{\n        \"kind\": \"Field\",\n        \"name\": {\n          \"kind\": \"Name\",\n          \"value\": \"launches\"\n        },\n        \"arguments\": [],\n        \"directives\": [],\n        \"selectionSet\": {\n          \"kind\": \"SelectionSet\",\n          \"selections\": [{\n            \"kind\": \"Field\",\n            \"name\": {\n              \"kind\": \"Name\",\n              \"value\": \"flight_number\"\n            },\n            \"arguments\": [],\n            \"directives\": []\n          }, {\n            \"kind\": \"Field\",\n            \"name\": {\n              \"kind\": \"Name\",\n              \"value\": \"mission_name\"\n            },\n            \"arguments\": [],\n            \"directives\": []\n          }, {\n            \"kind\": \"Field\",\n            \"name\": {\n              \"kind\": \"Name\",\n              \"value\": \"launch_date_local\"\n            },\n            \"arguments\": [],\n            \"directives\": []\n          }, {\n            \"kind\": \"Field\",\n            \"name\": {\n              \"kind\": \"Name\",\n              \"value\": \"launch_success\"\n            },\n            \"arguments\": [],\n            \"directives\": []\n          }]\n        }\n      }]\n    }\n  }],\n  \"loc\": {\n    \"start\": 0,\n    \"end\": 134,\n    \"source\": {\n      \"body\": \"\\n  query LaunchesQuery {\\n    launches {\\n      flight_number\\n      mission_name\\n      launch_date_local\\n      launch_success\\n    }\\n  }\\n\",\n      \"name\": \"GraphQL request\",\n      \"locationOffset\": {\n        \"line\": 1,\n        \"column\": 1\n      }\n    }\n  }\n};\n\nconst Launches = () => {\n  return __jsx(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    className: \"display-4 my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"Launches\"), __jsx(MissionKey, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }), __jsx(Query, {\n    query: LAUNCHES_QUERY,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, ({\n    loading,\n    error,\n    data\n  }) => {\n    if (loading) return __jsx(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 33\n      }\n    }, \"Loading...\");\n\n    if (error) {\n      throw new Error(error);\n    } else {\n      return __jsx(React.Fragment, null, data.launches.map(launch => {\n        return __jsx(LaunchItem, {\n          key: launch.flight_number,\n          launch: launch,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 28\n          }\n        });\n      }));\n    }\n  }));\n};\n\nexport default Launches;","map":{"version":3,"sources":["/Users/apple/lesson/hello-next/hello-apollo-next/pages/index.js"],"names":["Fragment","Query","LaunchItem","MissionKey","LAUNCHES_QUERY","Launches","loading","error","data","Error","launches","map","launch","flight_number"],"mappings":";;;;AAAA;;;;;;;AAOA,SAASA,QAAT,QAAyB,OAAzB;AAEA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AAEA,MAAMC,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB;;AAWA,MAAMC,QAAQ,GAAG,MAAM;AACrB,SACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,MAAC,KAAD;AAAO,IAAA,KAAK,EAAED,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAEE,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,GAAD,KAA8B;AAC7B,QAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;;AACb,QAAIC,KAAJ,EAAW;AAAC,YAAM,IAAIE,KAAJ,CAAUF,KAAV,CAAN;AAAuB,KAAnC,MACK;AACH,aAAO,4BAEHC,IAAI,CAACE,QAAL,CAAcC,GAAd,CAAkBC,MAAM,IAAI;AAC1B,eAAO,MAAC,UAAD;AAAY,UAAA,GAAG,EAAGA,MAAM,CAACC,aAAzB;AAAyC,UAAA,MAAM,EAAGD,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFD,CAFG,CAAP;AAQD;AACF,GAdH,CAHJ,CADF;AAsBD,CAvBD;;AAyBA,eAAeP,QAAf","sourcesContent":["/*\n * @Author: hhhhhq\n * @Date: 2020-06-26 22:41:58\n * @LastEditors: hhhhhq\n * @LastEditTime: 2020-06-27 15:40:41\n * @Description: file content\n */ \nimport { Fragment } from 'react'\nimport gql from 'graphql-tag'\nimport { Query } from 'react-apollo'\nimport LaunchItem from '../components/LaunchItem';\nimport MissionKey from '../components/MissionKey';\n\nconst LAUNCHES_QUERY = gql`\n  query LaunchesQuery {\n    launches {\n      flight_number\n      mission_name\n      launch_date_local\n      launch_success\n    }\n  }\n`\n\nconst Launches = () => {\n  return (\n    <Fragment>\n        <h1 className=\"display-4 my-3\">Launches</h1>\n        <MissionKey />\n        <Query query={LAUNCHES_QUERY}>\n          {({ loading, error, data }) => {\n            if (loading) return <h4>Loading...</h4>;\n            if (error) {throw new Error(error)}\n            else {\n              return <>\n                {\n                  data.launches.map(launch => {\n                    return <LaunchItem key={ launch.flight_number } launch={ launch } />\n                  })\n                }\n              </>\n\n            }\n          }}\n        </Query>\n      </Fragment>\n  )\n}\n\nexport default Launches\n"]},"metadata":{},"sourceType":"module"}