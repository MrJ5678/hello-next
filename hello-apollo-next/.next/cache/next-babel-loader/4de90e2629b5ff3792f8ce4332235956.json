{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/apple/lesson/hello-next/hello-apollo-next/components/Submit.js\",\n    _s = $RefreshSig$();\n\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useMutation } from '@apollo/react-hooks';\nimport { ALL_POSTS_QUERY, allPostsQueryVars } from './PostList';\nvar CREATE_POST_MUTATION = {\n  \"kind\": \"Document\",\n  \"definitions\": [{\n    \"kind\": \"OperationDefinition\",\n    \"operation\": \"mutation\",\n    \"name\": {\n      \"kind\": \"Name\",\n      \"value\": \"createPost\"\n    },\n    \"variableDefinitions\": [{\n      \"kind\": \"VariableDefinition\",\n      \"variable\": {\n        \"kind\": \"Variable\",\n        \"name\": {\n          \"kind\": \"Name\",\n          \"value\": \"title\"\n        }\n      },\n      \"type\": {\n        \"kind\": \"NonNullType\",\n        \"type\": {\n          \"kind\": \"NamedType\",\n          \"name\": {\n            \"kind\": \"Name\",\n            \"value\": \"String\"\n          }\n        }\n      },\n      \"directives\": []\n    }, {\n      \"kind\": \"VariableDefinition\",\n      \"variable\": {\n        \"kind\": \"Variable\",\n        \"name\": {\n          \"kind\": \"Name\",\n          \"value\": \"url\"\n        }\n      },\n      \"type\": {\n        \"kind\": \"NonNullType\",\n        \"type\": {\n          \"kind\": \"NamedType\",\n          \"name\": {\n            \"kind\": \"Name\",\n            \"value\": \"String\"\n          }\n        }\n      },\n      \"directives\": []\n    }],\n    \"directives\": [],\n    \"selectionSet\": {\n      \"kind\": \"SelectionSet\",\n      \"selections\": [{\n        \"kind\": \"Field\",\n        \"name\": {\n          \"kind\": \"Name\",\n          \"value\": \"createPost\"\n        },\n        \"arguments\": [{\n          \"kind\": \"Argument\",\n          \"name\": {\n            \"kind\": \"Name\",\n            \"value\": \"title\"\n          },\n          \"value\": {\n            \"kind\": \"Variable\",\n            \"name\": {\n              \"kind\": \"Name\",\n              \"value\": \"title\"\n            }\n          }\n        }, {\n          \"kind\": \"Argument\",\n          \"name\": {\n            \"kind\": \"Name\",\n            \"value\": \"url\"\n          },\n          \"value\": {\n            \"kind\": \"Variable\",\n            \"name\": {\n              \"kind\": \"Name\",\n              \"value\": \"url\"\n            }\n          }\n        }],\n        \"directives\": [],\n        \"selectionSet\": {\n          \"kind\": \"SelectionSet\",\n          \"selections\": [{\n            \"kind\": \"Field\",\n            \"name\": {\n              \"kind\": \"Name\",\n              \"value\": \"id\"\n            },\n            \"arguments\": [],\n            \"directives\": []\n          }, {\n            \"kind\": \"Field\",\n            \"name\": {\n              \"kind\": \"Name\",\n              \"value\": \"title\"\n            },\n            \"arguments\": [],\n            \"directives\": []\n          }, {\n            \"kind\": \"Field\",\n            \"name\": {\n              \"kind\": \"Name\",\n              \"value\": \"votes\"\n            },\n            \"arguments\": [],\n            \"directives\": []\n          }, {\n            \"kind\": \"Field\",\n            \"name\": {\n              \"kind\": \"Name\",\n              \"value\": \"url\"\n            },\n            \"arguments\": [],\n            \"directives\": []\n          }, {\n            \"kind\": \"Field\",\n            \"name\": {\n              \"kind\": \"Name\",\n              \"value\": \"createdAt\"\n            },\n            \"arguments\": [],\n            \"directives\": []\n          }]\n        }\n      }]\n    }\n  }],\n  \"loc\": {\n    \"start\": 0,\n    \"end\": 169,\n    \"source\": {\n      \"body\": \"\\n  mutation createPost($title: String!, $url: String!) {\\n    createPost(title: $title, url: $url) {\\n      id\\n      title\\n      votes\\n      url\\n      createdAt\\n    }\\n  }\\n\",\n      \"name\": \"GraphQL request\",\n      \"locationOffset\": {\n        \"line\": 1,\n        \"column\": 1\n      }\n    }\n  }\n};\nexport default function Submit() {\n  _s();\n\n  var _useMutation = useMutation(CREATE_POST_MUTATION),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      createPost = _useMutation2[0],\n      loading = _useMutation2[1].loading;\n\n  var handleSubmit = function handleSubmit(event) {\n    event.preventDefault();\n    var form = event.target;\n    var formData = new window.FormData(form);\n    var title = formData.get('title');\n    var url = formData.get('url');\n    form.reset();\n    createPost({\n      variables: {\n        title: title,\n        url: url\n      },\n      update: function update(proxy, _ref) {\n        var createPost = _ref.data.createPost;\n        var data = proxy.readQuery({\n          query: ALL_POSTS_QUERY,\n          variables: allPostsQueryVars\n        }); // Update the cache with the new post at the top of the\n\n        proxy.writeQuery({\n          query: ALL_POSTS_QUERY,\n          data: _objectSpread(_objectSpread({}, data), {}, {\n            allPosts: [createPost].concat(_toConsumableArray(data.allPosts))\n          }),\n          variables: allPostsQueryVars\n        });\n      }\n    });\n  };\n\n  return __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"jsx-4286934451\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    className: \"jsx-4286934451\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"Submit\"), __jsx(\"input\", {\n    placeholder: \"title\",\n    name: \"title\",\n    type: \"text\",\n    required: true,\n    className: \"jsx-4286934451\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), __jsx(\"input\", {\n    placeholder: \"url\",\n    name: \"url\",\n    type: \"url\",\n    required: true,\n    className: \"jsx-4286934451\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    disabled: loading,\n    className: \"jsx-4286934451\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"Submit\"), __jsx(_JSXStyle, {\n    id: \"4286934451\",\n    __self: this\n  }, \"form.jsx-4286934451{border-bottom:1px solid #ececec;padding-bottom:20px;margin-bottom:20px;}h1.jsx-4286934451{font-size:20px;}input.jsx-4286934451{display:block;margin-bottom:10px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hcHBsZS9sZXNzb24vaGVsbG8tbmV4dC9oZWxsby1hcG9sbG8tbmV4dC9jb21wb25lbnRzL1N1Ym1pdC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF1RGtCLEFBRzJDLEFBS2pCLEFBR0QsY0FDSyxDQUhyQixpQkFMc0IsQ0FTdEIsbUJBUnFCLG1CQUNyQiIsImZpbGUiOiIvVXNlcnMvYXBwbGUvbGVzc29uL2hlbGxvLW5leHQvaGVsbG8tYXBvbGxvLW5leHQvY29tcG9uZW50cy9TdWJtaXQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VNdXRhdGlvbiB9IGZyb20gJ0BhcG9sbG8vcmVhY3QtaG9va3MnXG5pbXBvcnQgZ3FsIGZyb20gJ2dyYXBocWwtdGFnJ1xuaW1wb3J0IHsgQUxMX1BPU1RTX1FVRVJZLCBhbGxQb3N0c1F1ZXJ5VmFycyB9IGZyb20gJy4vUG9zdExpc3QnXG5cbmNvbnN0IENSRUFURV9QT1NUX01VVEFUSU9OID0gZ3FsYFxuICBtdXRhdGlvbiBjcmVhdGVQb3N0KCR0aXRsZTogU3RyaW5nISwgJHVybDogU3RyaW5nISkge1xuICAgIGNyZWF0ZVBvc3QodGl0bGU6ICR0aXRsZSwgdXJsOiAkdXJsKSB7XG4gICAgICBpZFxuICAgICAgdGl0bGVcbiAgICAgIHZvdGVzXG4gICAgICB1cmxcbiAgICAgIGNyZWF0ZWRBdFxuICAgIH1cbiAgfVxuYFxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBTdWJtaXQoKSB7XG4gIGNvbnN0IFtjcmVhdGVQb3N0LCB7IGxvYWRpbmcgfV0gPSB1c2VNdXRhdGlvbihDUkVBVEVfUE9TVF9NVVRBVElPTilcblxuICBjb25zdCBoYW5kbGVTdWJtaXQgPSAoZXZlbnQpID0+IHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpXG4gICAgY29uc3QgZm9ybSA9IGV2ZW50LnRhcmdldFxuICAgIGNvbnN0IGZvcm1EYXRhID0gbmV3IHdpbmRvdy5Gb3JtRGF0YShmb3JtKVxuICAgIGNvbnN0IHRpdGxlID0gZm9ybURhdGEuZ2V0KCd0aXRsZScpXG4gICAgY29uc3QgdXJsID0gZm9ybURhdGEuZ2V0KCd1cmwnKVxuICAgIGZvcm0ucmVzZXQoKVxuXG4gICAgY3JlYXRlUG9zdCh7XG4gICAgICB2YXJpYWJsZXM6IHsgdGl0bGUsIHVybCB9LFxuICAgICAgdXBkYXRlOiAocHJveHksIHsgZGF0YTogeyBjcmVhdGVQb3N0IH0gfSkgPT4ge1xuICAgICAgICBjb25zdCBkYXRhID0gcHJveHkucmVhZFF1ZXJ5KHtcbiAgICAgICAgICBxdWVyeTogQUxMX1BPU1RTX1FVRVJZLFxuICAgICAgICAgIHZhcmlhYmxlczogYWxsUG9zdHNRdWVyeVZhcnMsXG4gICAgICAgIH0pXG4gICAgICAgIC8vIFVwZGF0ZSB0aGUgY2FjaGUgd2l0aCB0aGUgbmV3IHBvc3QgYXQgdGhlIHRvcCBvZiB0aGVcbiAgICAgICAgcHJveHkud3JpdGVRdWVyeSh7XG4gICAgICAgICAgcXVlcnk6IEFMTF9QT1NUU19RVUVSWSxcbiAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICAuLi5kYXRhLFxuICAgICAgICAgICAgYWxsUG9zdHM6IFtjcmVhdGVQb3N0LCAuLi5kYXRhLmFsbFBvc3RzXSxcbiAgICAgICAgICB9LFxuICAgICAgICAgIHZhcmlhYmxlczogYWxsUG9zdHNRdWVyeVZhcnMsXG4gICAgICAgIH0pXG4gICAgICB9LFxuICAgIH0pXG4gIH1cblxuICByZXR1cm4gKFxuICAgIDxmb3JtIG9uU3VibWl0PXtoYW5kbGVTdWJtaXR9PlxuICAgICAgPGgxPlN1Ym1pdDwvaDE+XG4gICAgICA8aW5wdXQgcGxhY2Vob2xkZXI9XCJ0aXRsZVwiIG5hbWU9XCJ0aXRsZVwiIHR5cGU9XCJ0ZXh0XCIgcmVxdWlyZWQgLz5cbiAgICAgIDxpbnB1dCBwbGFjZWhvbGRlcj1cInVybFwiIG5hbWU9XCJ1cmxcIiB0eXBlPVwidXJsXCIgcmVxdWlyZWQgLz5cbiAgICAgIDxidXR0b24gdHlwZT1cInN1Ym1pdFwiIGRpc2FibGVkPXtsb2FkaW5nfT5cbiAgICAgICAgU3VibWl0XG4gICAgICA8L2J1dHRvbj5cbiAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgZm9ybSB7XG4gICAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlY2VjZWM7XG4gICAgICAgICAgcGFkZGluZy1ib3R0b206IDIwcHg7XG4gICAgICAgICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgICAgICAgfVxuICAgICAgICBoMSB7XG4gICAgICAgICAgZm9udC1zaXplOiAyMHB4O1xuICAgICAgICB9XG4gICAgICAgIGlucHV0IHtcbiAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICAgICAgICB9XG4gICAgICBgfTwvc3R5bGU+XG4gICAgPC9mb3JtPlxuICApXG59XG4iXX0= */\\n/*@ sourceURL=/Users/apple/lesson/hello-next/hello-apollo-next/components/Submit.js */\"));\n}\n\n_s(Submit, \"aFMW2J4ZNemiTEFAiu7IIMXgLSc=\", false, function () {\n  return [useMutation];\n});\n\n_c = Submit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Submit\");","map":{"version":3,"sources":["/Users/apple/lesson/hello-next/hello-apollo-next/components/Submit.js"],"names":["useMutation","ALL_POSTS_QUERY","allPostsQueryVars","CREATE_POST_MUTATION","Submit","createPost","loading","handleSubmit","event","preventDefault","form","target","formData","window","FormData","title","get","url","reset","variables","update","proxy","data","readQuery","query","writeQuery","allPosts"],"mappings":"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","sourcesContent":["import { useMutation } from '@apollo/react-hooks'\nimport gql from 'graphql-tag'\nimport { ALL_POSTS_QUERY, allPostsQueryVars } from './PostList'\n\nconst CREATE_POST_MUTATION = gql`\n  mutation createPost($title: String!, $url: String!) {\n    createPost(title: $title, url: $url) {\n      id\n      title\n      votes\n      url\n      createdAt\n    }\n  }\n`\n\nexport default function Submit() {\n  const [createPost, { loading }] = useMutation(CREATE_POST_MUTATION)\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    const form = event.target\n    const formData = new window.FormData(form)\n    const title = formData.get('title')\n    const url = formData.get('url')\n    form.reset()\n\n    createPost({\n      variables: { title, url },\n      update: (proxy, { data: { createPost } }) => {\n        const data = proxy.readQuery({\n          query: ALL_POSTS_QUERY,\n          variables: allPostsQueryVars,\n        })\n        // Update the cache with the new post at the top of the\n        proxy.writeQuery({\n          query: ALL_POSTS_QUERY,\n          data: {\n            ...data,\n            allPosts: [createPost, ...data.allPosts],\n          },\n          variables: allPostsQueryVars,\n        })\n      },\n    })\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h1>Submit</h1>\n      <input placeholder=\"title\" name=\"title\" type=\"text\" required />\n      <input placeholder=\"url\" name=\"url\" type=\"url\" required />\n      <button type=\"submit\" disabled={loading}>\n        Submit\n      </button>\n      <style jsx>{`\n        form {\n          border-bottom: 1px solid #ececec;\n          padding-bottom: 20px;\n          margin-bottom: 20px;\n        }\n        h1 {\n          font-size: 20px;\n        }\n        input {\n          display: block;\n          margin-bottom: 10px;\n        }\n      `}</style>\n    </form>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}